{"version":3,"sources":["components/affectedCountry/InffectedCountries.js","components/InfectedCountry/InffecCountryList.js","components/InfectedCountry/InffetCountryMap.js","App.js","index.js"],"names":["InffectedCountryCard","urlFlag","country_name","cases","deaths","total_recovered","Card","CardHeader","Avatar","src","CardContent","Grid","style","textAlign","container","borderRight","sm","item","display","flexDirection","justifyContent","InffectedCountryList","inffectedCountries","updatedAt","Container","marginBottom","color","marginTop","spacing","map","country","key","lg","FlagPin","Chip","avatar","label","InffectedCountryMap","height","width","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","latlng","App","useState","setinffectedCountries","setUpdatedAt","useEffect","a","fetch","headers","inffectedCountriesResponse","allCountriesResponse","allCountries","ok","json","countries_stat","statistic_taken_at","stat","countryFound","find","name","toUpperCase","indexOf","altSpellings","findIndex","alt","flag","fetchData","overflowY","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f371fc15.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, CardHeader, Avatar, CardContent, Grid } from '@material-ui/core';\r\n\r\nexport default function InffectedCountryCard({\r\n  urlFlag,\r\n  country_name,\r\n  cases,\r\n  deaths,\r\n  total_recovered,\r\n}) {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        avatar = {<Avatar src={urlFlag} />}\r\n        title = {country_name}\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Grid style={{ textAlign: 'center' }} container >\r\n          < Grid style={{ borderRight: 'solid # 0E5077' }} sm={4} item >\r\n            <div style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n            }}>\r\n              < span > {cases} </ span>\r\n              < span > cases </span>\r\n            </div>\r\n          </Grid>\r\n\r\n          < Grid style={{ borderRight: 'solid # 0E5077' }} sm={4} item >\r\n            < div\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              < span > {deaths} </ span>\r\n              < span > deaths </ span>\r\n            </ div>\r\n          </ Grid>\r\n\r\n          < Grid sm={4} item >\r\n            < div\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              < span > {total_recovered} </ span>\r\n              < span > recovered </ span>\r\n            </ div>\r\n          </ Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import  React  from  'react' ;\r\nimport  {  Container ,  Grid  }  from  '@material-ui/core' ;\r\nimport  InffectedCountryCard  from  '../affectedCountry/InffectedCountries' ;\r\nexport  default  function  InffectedCountryList ( { inffectedCountries , updatedAt } )  {\r\n  return  (\r\n    < Container >\r\n      < h1  style = { {  marginBottom : '0'  } } > Infected countries List </ h1>\r\n      < p  style = { {  color : '# 0e5077' ,  marginTop : '0'  } } > Updated to {updatedAt} </ p>\r\n      < Grid  spacing = { 1 }  container >\r\n        { inffectedCountries.map ( country  =>  (\r\n          < Grid  key = {country.country_name}  lg = { 6 }  item >\r\n            < InffectedCountryCard  {...country} />\r\n          </ Grid>\r\n        ) ) }\r\n      </ Grid>\r\n    </ Container>\r\n  ) ;\r\n}","import  React  from  'react' ;\r\nimport  GoogleMapReact  from  'google-map-react' ;\r\nimport  {  Avatar ,  Chip  }  from  '@material-ui/core' ;\r\n\r\nconst  FlagPin  =  ( { urlFlag , cases } )  =>  (\r\n  < Chip  avatar = { < Avatar  src = {urlFlag} /> }  label = { ` ${cases} cases` } />\r\n) ;\r\n\r\nexport  default  function  InffectedCountryMap ( { inffectedCountries } )  {\r\n  return  (\r\n    < div  style = { {  height : '100%' ,  width : '100%'  } } >\r\n      < GoogleMapReact\r\n        bootstrapURLKeys = { {  key : 'AIzaSyDaKTe-eKZyCp87Q_7z2imydHNNUbHjBdQ'  } }\r\n        defaultCenter = { {  lat : 0 ,  lng : 0  } }\r\n        defaultZoom = { 1 }\r\n      >\r\n        { inffectedCountries.map ( country  =>\r\n          country.latlng ? (\r\n            < FlagPin\r\n              key = { country.country_name }\r\n              lat = { country.latlng[0] }\r\n              lng = { country.latlng[1] }\r\n              cases = { country.cases }\r\n              urlFlag = { country.urlFlag }\r\n            />\r\n          ) : null ,\r\n        ) }\r\n      </ GoogleMapReact>\r\n    </ div>\r\n  ) ;\r\n}","import { Grid } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport InffectedCountryList from './components/InfectedCountry/InffecCountryList';\nimport InffectedCountryMap from './components/InfectedCountry/InffetCountryMap';\n\nfunction  App ( )  {\n  let  [ inffectedCountries ,  setinffectedCountries ]  =  useState ( [ ] ) ;\n  let  [ updatedAt ,  setUpdatedAt ]  =  useState ( [ ] ) ;\n\n  useEffect ( ( )  =>  {\n    const  fetchData  =  async  ( )  =>  {\n      let  inffectedCountriesResponse  =  await  fetch (\n        'https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php' ,\n        {\n          headers : {\n            'x-rapidapi-host' : 'coronavirus-monitor.p.rapidapi.com' ,\n            'x-rapidapi-key' : 'a70c78d260msh197813e20e05ae4p139cebjsn0c045560d0e7' ,\n          } ,\n        } ,\n      ) ;\n\n      let  allCountriesResponse  =  await  fetch ( 'https://restcountries.eu/rest/v2/all' ) ;\n\n      let  allCountries  =  [ ] ;\n      if  ( allCountriesResponse.ok )  {\n        allCountries  =  await  allCountriesResponse.json ( ) ;\n      }\n\n      if  ( inffectedCountriesResponse.ok )  {\n        let  { countries_stat , statistic_taken_at }  =  await  inffectedCountriesResponse.json ( ) ;\n        setinffectedCountries (\n          countries_stat.map ( stat  =>  {\n            let  countryFound  =  allCountries.find (\n              country  =>\n                country.name.toUpperCase ( ).indexOf ( stat.country_name.toUpperCase ( ) ) !== - 1  ||\n                country.altSpellings.findIndex (\n                  alt  =>  alt.toUpperCase ( ).indexOf ( stat.country_name.toUpperCase ( ) ) !== - 1 ,\n                ) !== - 1 ,\n            ) ;\n            if  ( ! countryFound )  countryFound  =  { } ;\n            return  {\n              ...stat ,\n              urlFlag : countryFound.flag ,\n              latlng : countryFound.latlng ,\n            } ;\n          } ) ,\n        ) ;\n\n        setUpdatedAt ( statistic_taken_at ) ;\n      }\n    } ;\n\n    fetchData ( ) ;\n  } ,  [ ] ) ;\n\n  return  (\n    < Grid  container >\n      < Grid  style = { {  height : '100vh' ,  overflowY : 'auto'  } }  lg = { 6 }  sm = { 12 }  item >\n        < InffectedCountryList  inffectedCountries = { inffectedCountries }  updatedAt = { updatedAt } / >\n      </ Grid>\n      < Grid  style = { {  height : '100vh'  } }  lg = { 6 }  sm = { 12 }  item >\n        < InffectedCountryMap  inffectedCountries = { inffectedCountries } />\n      </ Grid>\n    </ Grid>\n  ) ;\n}\n\nexport  default  App ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}